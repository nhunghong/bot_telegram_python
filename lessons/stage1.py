# Giai ƒëo·∫°n 1: L√†m quen Python
stage1_lessons = {
    "g1_b1": {
        "title": "B√†i 1: Gi·ªõi thi·ªáu Python",
        "content": (
            "*üëã Python l√† g√¨?*\n\n"
            "- Python l√† ng√¥n ng·ªØ l·∫≠p tr√¨nh b·∫≠c cao, c√∫ ph√°p ƒë∆°n gi·∫£n, d·ªÖ ƒë·ªçc.\n"
            "- D√πng trong nhi·ªÅu lƒ©nh v·ª±c: ki·ªÉm th·ª≠ t·ª± ƒë·ªông, ph√¢n t√≠ch d·ªØ li·ªáu, AI, web...\n"
            "- Ph√π h·ª£p c·∫£ v·ªõi ng∆∞·ªùi m·ªõi h·ªçc l·∫≠p tr√¨nh ho·∫∑c tester mu·ªën chuy·ªÉn sang automation.\n\n"
            "*ü§î T·∫°i sao ch·ªçn Python m√† kh√¥ng ph·∫£i ng√¥n ng·ªØ kh√°c?*\n"
            "- ‚úîÔ∏è C√∫ ph√°p ng·∫Øn g·ªçn, d·ªÖ hi·ªÉu h∆°n Java, C++, C#\n"
            "- ‚úîÔ∏è C·ªông ƒë·ªìng l·ªõn, d·ªÖ t√¨m t√†i li·ªáu v√† h·ªó tr·ª£\n"
            "- ‚úîÔ∏è C√≥ nhi·ªÅu th∆∞ vi·ªán m·∫°nh: Selenium (test), Pandas (x·ª≠ l√Ω d·ªØ li·ªáu), FastAPI, v.v.\n"
            "- ‚úîÔ∏è ƒê∆∞·ª£c d√πng b·ªüi c√°c c√¥ng ty l·ªõn: Google, Facebook, Netflix, NASA...\n"
            "- ‚úîÔ∏è Kh√¥ng c·∫ßn h·ªçc c·∫•u tr√∫c ph·ª©c t·∫°p nh∆∞ class, static... t·ª´ ƒë·∫ßu\n\n"
            "*üîß Python gi√∫p g√¨ cho tester?*\n"
            "- Vi·∫øt script ki·ªÉm th·ª≠ t·ª± ƒë·ªông nhanh ch√≥ng\n"
            "- Test API d·ªÖ d√†ng v·ªõi Requests\n"
            "- T·ª± ƒë·ªông h√≥a ki·ªÉm tra Excel, email, b√°o c√°o...\n\n"
            "*üì¶ V√≠ d·ª• ƒë·∫ßu ti√™n:*\n"
            "```python\nprint(\"Hello, Python!\")\n```\n\n"
            "*üéØ Sau b√†i n√†y b·∫°n s·∫Ω:*\n"
            "- Hi·ªÉu Python d√πng ƒë·ªÉ l√†m g√¨\n"
            "- L√Ω do n√™n ch·ªçn Python cho automation\n"
            "- Chu·∫©n b·ªã c√†i ƒë·∫∑t Python ·ªü b√†i ti·∫øp theo"
        ),
        "exercise": (
            "*üìö B√†i t·∫≠p B√†i 1:*\n"
            "1. Vi·∫øt l·ªánh in ra d√≤ng ch·ªØ: `Hello Tester`\n"
            "2. Vi·∫øt 3 d√≤ng l·ªánh in ra t√™n, tu·ªïi v√† ngh·ªÅ nghi·ªáp c·ªßa b·∫°n.\n\n"
            "*G·ª£i √Ω: d√πng l·ªánh `print()`*"
        )
    },
    "g1_b2": {
        "title": "B√†i 2: C√†i ƒë·∫∑t Python & VSCode",
        "content": (
            "üß© *C√†i Python*\n"
            "1. Truy c·∫≠p: https://www.python.org/downloads/\n"
            "2. Ch·ªçn phi√™n b·∫£n ·ªïn ƒë·ªãnh m·ªõi nh·∫•t (g·ª£i √Ω: Python 3.12.x)\n"
            "3. Khi c√†i ƒë·∫∑t:\n"
            "   - ‚úÖ Tick v√†o *\"Add Python to PATH\"*\n"
            "   - ‚úÖ Ch·ªçn *\"Install Now\"*\n"
            "\n"
            "üîç Ki·ªÉm tra sau khi c√†i:\n"
            "`python --version`\n"
            "\n"
            "---\n"
            "üíª *C√†i Visual Studio Code (VSCode)*\n"
            "1. Truy c·∫≠p: https://code.visualstudio.com/\n"
            "2. Ch·ªçn b·∫£n ph√π h·ª£p h·ªá ƒëi·ªÅu h√†nh c·ªßa b·∫°n (Windows/Mac/Linux)\n"
            "3. Sau khi c√†i:\n"
            "   - M·ªü VSCode\n"
            "   - V√†o Extensions (Ctrl+Shift+X) ‚Üí C√†i *Python* (t√°c gi·∫£: Microsoft)\n"
            "\n"
            "---\n"
            "üöÄ *Ch·∫°y th·ª≠ Python ƒë·∫ßu ti√™n:*\n"
            "1. T·∫°o file `test.py`\n"
            "2. Nh·∫≠p:\n"
            "```python\nprint(\"Xin ch√†o Python!\")\n```\n"
            "3. Click chu·ªôt ph·∫£i ‚Üí *Run Python File in Terminal*\n"
            "\n"
            "‚úÖ Sau b√†i n√†y:\n"
            "- B·∫°n ƒë√£ c√†i xong Python & VSCode\n"
            "- Bi·∫øt c√°ch ch·∫°y 1 file Python ƒë∆°n gi·∫£n"
        )

    },
    "g1_b3": {
        "title": "B√†i 3: Bi·∫øn v√† ki·ªÉu d·ªØ li·ªáu",
        "content": (
            "*üì¶ Bi·∫øn l√† g√¨?*\n"
            "- Bi·∫øn l√† n∆°i l∆∞u tr·ªØ d·ªØ li·ªáu trong ch∆∞∆°ng tr√¨nh.\n"
            "- B·∫°n c√≥ th·ªÉ t∆∞·ªüng t∆∞·ª£ng n√≥ nh∆∞ h·ªôp ch·ª©a gi√° tr·ªã.\n\n"
            
            "*üß† Khai b√°o bi·∫øn trong Python:*\n"
            "```python\nname = 'Nhung'        # chu·ªói (str)\nage = 30              # s·ªë nguy√™n (int)\nheight = 1.6          # s·ªë th·ª±c (float)\nis_tester = True      # ƒë√∫ng/sai (bool)\n```\n\n"

            "*üìò Ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n:*\n"
            "- `str`: chu·ªói k√Ω t·ª± (vd: 'Hello')\n"
            "- `int`: s·ªë nguy√™n (vd: 10, -5)\n"
            "- `float`: s·ªë th·ª±c (vd: 3.14)\n"
            "- `bool`: logic ƒë√∫ng/sai (True/False)\n\n"

            "*üîç Ki·ªÉm tra ki·ªÉu d·ªØ li·ªáu:*\n"
            "```python\nprint(type(name))    # <class 'str'>\nprint(type(age))     # <class 'int'>\n```\n\n"

            "*üìù Ghi nh·ªõ:*\n"
            "- Python t·ª± hi·ªÉu ki·ªÉu d·ª±a v√†o gi√° tr·ªã g√°n.\n"
            "- Kh√¥ng c·∫ßn khai b√°o ki·ªÉu r√µ r√†ng nh∆∞ Java/C++.\n"
            "- T√™n bi·∫øn n√™n d√πng ch·ªØ th∆∞·ªùng, c√≥ th·ªÉ c√≥ g·∫°ch d∆∞·ªõi `_`.\n\n"

            "üéØ *Sau b√†i n√†y b·∫°n s·∫Ω:*\n"
            "- Bi·∫øt khai b√°o bi·∫øn trong Python\n"
            "- Ph√¢n bi·ªát c√°c ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n\n"
            "- D√πng `type()` ƒë·ªÉ ki·ªÉm tra ki·ªÉu d·ªØ li·ªáu"
        )
    },
    "g1_b4": {
        "title": "B√†i 4: To√°n t·ª≠ + logic",
        "content": (
            "*üî¢ To√°n t·ª≠ trong Python:*\n\n"
            "*1. To√°n t·ª≠ s·ªë h·ªçc:*\n"
            "- `+` c·ªông: `a + b`\n"
            "- `-` tr·ª´: `a - b`\n"
            "- `*` nh√¢n: `a * b`\n"
            "- `/` chia: `a / b`\n"
            "- `//` chia l·∫•y nguy√™n: `a // b`\n"
            "- `%` chia l·∫•y d∆∞: `a % b`\n"
            "- `**` l≈©y th·ª´a: `a ** b`\n\n"
            "```python\na = 5\nb = 2\nprint(a + b)   # 7\nprint(a % b)   # 1\n```\n\n"

            "*2. To√°n t·ª≠ so s√°nh:*\n"
            "- `==`: so s√°nh b·∫±ng\n"
            "- `!=`: kh√°c nhau\n"
            "- `>`: l·ªõn h∆°n\n"
            "- `<`: nh·ªè h∆°n\n"
            "- `>=`: l·ªõn h∆°n ho·∫∑c b·∫±ng\n"
            "- `<=`: nh·ªè h∆°n ho·∫∑c b·∫±ng\n"
            "```python\nprint(5 > 2)    # True\nprint(3 == 4)   # False\n```\n\n"

            "*3. To√°n t·ª≠ logic:*\n"
            "- `and`: ƒë√∫ng khi c·∫£ 2 ƒë·ªÅu ƒë√∫ng\n"
            "- `or`: ƒë√∫ng khi √≠t nh·∫•t 1 c√°i ƒë√∫ng\n"
            "- `not`: ph·ªß ƒë·ªãnh gi√° tr·ªã\n"
            "```python\nage = 25\nis_tester = True\nprint(age > 18 and is_tester)  # True\n```\n\n"

            "*üéØ ·ª®ng d·ª•ng logic:* V√≠ d·ª• ki·ªÉm tra ƒë·ªß ƒëi·ªÅu ki·ªán h·ªçc n√¢ng cao:\n"
            "```python\nif age > 18 and is_tester:\n    print('B·∫°n ƒë·ªß ƒëi·ªÅu ki·ªán h·ªçc n√¢ng cao')\nelse:\n    print('Ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán')\n```\n\n"

            "üìå *Ghi nh·ªõ:*\n"
            "- D√πng to√°n t·ª≠ ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu s·ªë v√† logic.\n"
            "- C√°c ƒëi·ªÅu ki·ªán logic th∆∞·ªùng d√πng trong ki·ªÉm th·ª≠ t·ª± ƒë·ªông v√† x·ª≠ l√Ω d·ªØ li·ªáu.\n"
            "- K·∫øt h·ª£p `if`, `and`, `or`, `not` r·∫•t quan tr·ªçng khi vi·∫øt ki·ªÉm th·ª≠.\n"
        )
    },

    "g1_b5": {
        "title": "B√†i 5: C√¢u l·ªánh ƒëi·ªÅu ki·ªán",
        "content": (
            "*üìå C√¢u l·ªánh ƒëi·ªÅu ki·ªán `if - else - elif` l√† g√¨?*\n\n"
            "üëâ D√πng ƒë·ªÉ ki·ªÉm tra ƒëi·ªÅu ki·ªán ƒë√∫ng hay sai v√† x·ª≠ l√Ω theo t·ª´ng tr∆∞·ªùng h·ª£p.\n\n"

            "*1. C√¢u l·ªánh `if - else`:*\n"
            "```python\nage = 16\nif age >= 18:\n    print('ƒê·ªß tu·ªïi h·ªçc n√¢ng cao')\nelse:\n    print('Ch∆∞a ƒë·ªß tu·ªïi')\n```\n"
            "‚û°Ô∏è N·∫øu ƒëi·ªÅu ki·ªán ƒë√∫ng th√¨ th·ª±c hi·ªán ph·∫ßn `if`, n·∫øu sai th√¨ th·ª±c hi·ªán ph·∫ßn `else`.\n\n"

            "*2. C√¢u l·ªánh `elif` (else if):*\n"
            "```python\nscore = 85\nif score >= 90:\n    print('Xu·∫•t s·∫Øc')\nelif score >= 70:\n    print('Kh√°')\nelse:\n    print('C·∫ßn c·ªë g·∫Øng')\n```\n"
            "‚û°Ô∏è Ki·ªÉm tra nhi·ªÅu ƒëi·ªÅu ki·ªán. ƒêi·ªÅu ki·ªán n√†o ƒë√∫ng ƒë·∫ßu ti√™n s·∫Ω ƒë∆∞·ª£c th·ª±c hi·ªán.\n\n"

            "*3. So s√°nh k·∫øt h·ª£p nhi·ªÅu ƒëi·ªÅu ki·ªán:*\n"
            "```python\nage = 22\nis_tester = True\nif age >= 18 and is_tester:\n    print('H·ªçc ƒë∆∞·ª£c automation r·ªìi!')\n```\n\n"

            "*üí° Ghi nh·ªõ:*\n"
            "- `if` lu√¥n ƒë·ª©ng ƒë·∫ßu kh·ªëi ƒëi·ªÅu ki·ªán.\n"
            "- `elif` c√≥ th·ªÉ c√≥ nhi·ªÅu d√≤ng.\n"
            "- `else` ch·ªâ c√≥ 1 v√† lu√¥n n·∫±m cu·ªëi c√πng.\n\n"

            "‚úÖ ƒê√¢y l√† c·∫•u tr√∫c r·∫•t quan tr·ªçng trong ki·ªÉm th·ª≠ logic, t·ª± ƒë·ªông h√≥a v√† x·ª≠ l√Ω lu·ªìng d·ªØ li·ªáu."
        )
    },
    "g1_b6": {
        "title": "B√†i 6: V√≤ng l·∫∑p for, while",
        "content": (
            "*üîÅ V√≤ng l·∫∑p d√πng ƒë·ªÉ l√†m g√¨?*\n"
            "‚û°Ô∏è V√≤ng l·∫∑p gi√∫p l·∫∑p ƒëi l·∫∑p l·∫°i m·ªôt kh·ªëi l·ªánh nhi·ªÅu l·∫ßn thay v√¨ ph·∫£i vi·∫øt l·∫°i th·ªß c√¥ng.\n\n"

            "*1. V√≤ng l·∫∑p `for`: Duy·ªát qua danh s√°ch*\n"
            "```python\ndanh_sach = ['Python', 'Selenium', 'API']\nfor ten in danh_sach:\n    print('T√¥i ƒëang h·ªçc:', ten)\n```\n"
            "‚û°Ô∏è L·∫∑p qua t·ª´ng ph·∫ßn t·ª≠ trong danh s√°ch v√† x·ª≠ l√Ω.\n\n"

            "*2. V√≤ng l·∫∑p v·ªõi `range()` ‚Äì ƒê·∫øm s·ªë l·∫ßn*\n"
            "```python\nfor i in range(5):\n    print('L·∫ßn', i)\n```\n"
            "‚û°Ô∏è `range(5)` t·∫°o ra c√°c s·ªë t·ª´ 0 ƒë·∫øn 4 (5 s·ªë).\n\n"

            "*3. V√≤ng l·∫∑p `while`: L·∫∑p khi ƒëi·ªÅu ki·ªán c√≤n ƒë√∫ng*\n"
            "```python\nn = 1\nwhile n <= 3:\n    print('L·∫ßn l·∫∑p:', n)\n    n += 1\n```\n"
            "‚û°Ô∏è D√πng `while` khi ch∆∞a bi·∫øt r√µ s·ªë l·∫ßn l·∫∑p.\n\n"

            "*üìå Ghi nh·ªõ:*\n"
            "- `for` ph√π h·ª£p khi duy·ªát danh s√°ch ho·∫∑c s·ªë l·∫ßn c·ª• th·ªÉ.\n"
            "- `while` d√πng khi mu·ªën l·∫∑p ƒë·∫øn khi ƒëi·ªÅu ki·ªán thay ƒë·ªïi.\n"
            "- ƒê·ª´ng qu√™n `n += 1` n·∫øu kh√¥ng s·∫Ω l·∫∑p v√¥ t·∫≠n üò±\n\n"

            "üéØ *·ª®ng d·ª•ng trong th·ª±c t·∫ø:*\n"
            "- L·∫∑p qua danh s√°ch d·ªØ li·ªáu ki·ªÉm th·ª≠\n"
            "- Ch·∫°y ki·ªÉm tra nhi·ªÅu tr∆∞·ªùng h·ª£p m·ªôt c√°ch t·ª± ƒë·ªông\n"
            "- T·ª± ƒë·ªông ki·ªÉm tra t·ª´ng b∆∞·ªõc trong h·ªá th·ªëng"
        )
    },

    "g1_b7": {
        "title": "B√†i 7: H√†m & g·ªçi l·∫°i h√†m",
        "content": (
            "*üì£ H√†m l√† g√¨?*\n"
            "‚û°Ô∏è H√†m l√† t·∫≠p h·ª£p c√°c l·ªánh ƒë∆∞·ª£c ƒë·∫∑t t√™n, d√πng ƒë·ªÉ th·ª±c hi·ªán m·ªôt nhi·ªám v·ª• c·ª• th·ªÉ.\n"
            "‚û°Ô∏è Gi√∫p chia nh·ªè ch∆∞∆°ng tr√¨nh, t√°i s·ª≠ d·ª•ng v√† d·ªÖ qu·∫£n l√Ω h∆°n.\n\n"

            "*üìå C√°ch ƒë·ªãnh nghƒ©a h√†m:*\n"
            "```python\ndef chao(name):\n    print(f'Ch√†o {name}, ch√∫c b·∫°n h·ªçc t·ªët!')\n```\n"
            "üëâ `def` l√† t·ª´ kh√≥a ƒë·ªÉ ƒë·ªãnh nghƒ©a h√†m.\n"
            "üëâ `chao` l√† t√™n h√†m, `name` l√† tham s·ªë truy·ªÅn v√†o.\n\n"

            "*‚ñ∂Ô∏è G·ªçi l·∫°i h√†m:*\n"
            "```python\nchao('Nhung')\n```\n"
            "‚û°Ô∏è K·∫øt qu·∫£: `Ch√†o Nhung, ch√∫c b·∫°n h·ªçc t·ªët!`\n\n"

            "*üéØ L·ª£i √≠ch khi d√πng h√†m:*\n"
            "- Gi√∫p code ng·∫Øn g·ªçn, d·ªÖ ƒë·ªçc.\n"
            "- C√≥ th·ªÉ g·ªçi l·∫°i nhi·ªÅu l·∫ßn thay v√¨ l·∫∑p code.\n"
            "- D·ªÖ s·ª≠a l·ªói ho·∫∑c m·ªü r·ªông logic ki·ªÉm th·ª≠.\n\n"

            "*üöÄ ·ª®ng d·ª•ng th·ª±c t·∫ø:*\n"
            "- Vi·∫øt c√°c b∆∞·ªõc ki·ªÉm th·ª≠ nh∆∞: `login()`, `logout()`\n"
            "- T√°i s·ª≠ d·ª•ng ki·ªÉm th·ª≠ nhi·ªÅu trang kh√°c nhau\n"
            "- T·ªï ch·ª©c code r√µ r√†ng theo ch·ª©c nƒÉng\n\n"

            "*‚úÖ Ghi nh·ªõ:*\n"
            "- H√†m ph·∫£i ƒë·ªãnh nghƒ©a tr∆∞·ªõc khi g·ªçi.\n"
            "- C√≥ th·ªÉ c√≥ ho·∫∑c kh√¥ng c√≥ tham s·ªë.\n"
            "- C√≥ th·ªÉ tr·∫£ k·∫øt qu·∫£ v·ªÅ b·∫±ng `return`."
        )
    },
}